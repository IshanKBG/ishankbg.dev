---
import { getCollection } from "astro:content";
import Schema from "../../components/schema.astro";
import Layout from "../../components/BlogLayout.astro";
import type {InferGetStaticPropsType} from "astro";
export async function getStaticPaths() {
  const posts = await getCollection("blog");
    return posts.map(entry => ({
        params: { slug: entry.slug }, props: { entry },
    }));
}
const { entry } = Astro.props as InferGetStaticPropsType<typeof getStaticPaths> ;
const { Content } = await entry.render();
---
<Layout
        title={entry.data.title}
        description={entry.data.description}
        keywords={entry.data.tags.join(', ')}
        url={`https://ishankbg.dev/blog/${entry.slug}`}
>
    <Schema
    item={{
        "@context": "https://schema.org",
        "@type": "BlogPosting",
        "headline": entry.data.title,
        "datePublished": new Date(entry.data.pubDate).toISOString(),
        "author": {
            "@type": "Person",
            "name": "Ishan Jaiswal",
            "url": `${Astro.site}/about`
        },
        "contributor": {
            "@type": "Person",
            "name": entry.data.contributors[0],
            "url": entry.data.contributors[1]
        },
        "description": entry.data.description,
    }}
    />

    <header class="flex flex-col gap-4">
        <h1 class="text-2xl md:text-4xl font-bold text-white">{entry.data.title }</h1>
        <p class="font-light text-sm">Published on <time datetime={new Date(entry.data.pubDate).toISOString()}>{new Date(entry.data.pubDate).toLocaleDateString()}</time> </p>
    </header>
    <article class="prose prose-invert px-2 md:px-4 py-2 md:py-4 text-white text-md antialiased break-words">
       <Content />
    </article>
</Layout>